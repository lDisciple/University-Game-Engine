#version 400 core

in vec3 position;
in vec2 texCoords;
in vec3 normal;

uniform mat4 transMatrix;
uniform mat4 projMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPos;

out vec2 pass_texCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;
out vec3 pass_normal;

void main(void){
    vec4 worldPosition = transMatrix * vec4(position,1);
    gl_Position = projMatrix * viewMatrix * worldPosition;
    pass_texCoords = texCoords;

    surfaceNormal = (transMatrix * vec4(normal,0.0)).xyz;
    toLightVector = lightPos - worldPosition.xyz;
    pass_normal = normal;
    toCameraVector = (inverse(viewMatrix) * vec4(0,0,0,1)).xyz - worldPosition.xyz;
}
